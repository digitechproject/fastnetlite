"use strict";(self.webpackChunkfastnetlite=self.webpackChunkfastnetlite||[]).push([[118],{118:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAndCreateCollection: () => (/* binding */ checkAndCreateCollection),\n/* harmony export */   createCompositeIndexes: () => (/* binding */ createCompositeIndexes),\n/* harmony export */   displayIndexError: () => (/* binding */ displayIndexError),\n/* harmony export */   documentExists: () => (/* binding */ documentExists),\n/* harmony export */   executeWithIndexErrorHandling: () => (/* binding */ executeWithIndexErrorHandling),\n/* harmony export */   handleFirebaseError: () => (/* binding */ handleFirebaseError),\n/* harmony export */   handleFirebaseIndexError: () => (/* binding */ handleFirebaseIndexError),\n/* harmony export */   initializeCollections: () => (/* binding */ initializeCollections)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(467);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(848);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(756);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(26);\n/* harmony import */ var _firebase_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(325);\n\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .A)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n// Utilitaires pour gérer les interactions avec Firebase\n\n\n// Importer l'instance Firestore déjà initialisée depuis firebase-config.js\n\n\n/**\n * Vérifie si une collection existe et la crée si nécessaire avec un document factice\n * @param {string} collectionPath - Chemin de la collection (ex: 'routers')\n * @param {Object} dummyData - Données factices pour le document temporaire\n * @returns {Promise<boolean>} - Promesse résolue avec true si la collection existe ou a été créée\n */\nfunction checkAndCreateCollection(_x) {\n  return _checkAndCreateCollection.apply(this, arguments);\n}\n\n/**\n * Vérifie et crée toutes les collections nécessaires pour l'application\n * @param {string} userId - ID de l'utilisateur connecté\n * @param {string} routerId - ID du routeur (optionnel)\n * @returns {Promise<boolean>} - Promesse résolue avec true si toutes les collections ont été vérifiées\n */\nfunction _checkAndCreateCollection() {\n  _checkAndCreateCollection = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(collectionPath) {\n    var dummyData,\n      dummyDocRef,\n      dummyDocSnap,\n      dataWithMeta,\n      _args2 = arguments;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dummyData = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n          _context2.prev = 1;\n          console.log(\"V\\xE9rification de la collection: \".concat(collectionPath));\n\n          // Créer un document factice temporaire\n          dummyDocRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .doc */ .H9)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .collection */ .rJ)(_firebase_config_js__WEBPACK_IMPORTED_MODULE_3__.db, collectionPath), 'dummy_doc'); // Vérifier si le document existe déjà\n          _context2.next = 6;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .getDoc */ .x7)(dummyDocRef);\n        case 6:\n          dummyDocSnap = _context2.sent;\n          if (dummyDocSnap.exists()) {\n            _context2.next = 15;\n            break;\n          }\n          // Ajouter _dummy flag et timestamp\n          dataWithMeta = _objectSpread(_objectSpread({}, dummyData), {}, {\n            _dummy: true,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .serverTimestamp */ .O5)()\n          }); // Créer le document factice\n          _context2.next = 11;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .setDoc */ .BN)(dummyDocRef, dataWithMeta);\n        case 11:\n          console.log(\"Collection \".concat(collectionPath, \" cr\\xE9\\xE9e avec document factice\"));\n\n          // Supprimer le document factice après un court délai\n          setTimeout(/*#__PURE__*/(0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .deleteDoc */ .kd)(dummyDocRef);\n                case 3:\n                  console.log(\"Document factice supprim\\xE9 de \".concat(collectionPath));\n                  _context.next = 9;\n                  break;\n                case 6:\n                  _context.prev = 6;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.error(\"Erreur lors de la suppression du document factice: \".concat(_context.t0));\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, null, [[0, 6]]);\n          })), 2000);\n          _context2.next = 16;\n          break;\n        case 15:\n          console.log(\"Collection \".concat(collectionPath, \" existe d\\xE9j\\xE0\"));\n        case 16:\n          return _context2.abrupt(\"return\", true);\n        case 19:\n          _context2.prev = 19;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(\"Erreur lors de la v\\xE9rification/cr\\xE9ation de la collection \".concat(collectionPath, \":\"), _context2.t0);\n          return _context2.abrupt(\"return\", false);\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 19]]);\n  }));\n  return _checkAndCreateCollection.apply(this, arguments);\n}\nfunction initializeCollections(_x2) {\n  return _initializeCollections.apply(this, arguments);\n}\n\n/**\n * Vérifie si un document existe dans une collection\n * @param {string} collectionPath - Chemin de la collection\n * @param {string} docId - ID du document\n * @returns {Promise<boolean>} - Promesse résolue avec true si le document existe\n */\nfunction _initializeCollections() {\n  _initializeCollections = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3(userId) {\n    var routerId,\n      _args3 = arguments;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          routerId = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;\n          _context3.prev = 1;\n          console.log('Initialisation des collections...');\n\n          // Collections au niveau utilisateur\n          _context3.next = 5;\n          return checkAndCreateCollection('routers', {\n            userId: userId\n          });\n        case 5:\n          if (!routerId) {\n            _context3.next = 14;\n            break;\n          }\n          _context3.next = 8;\n          return checkAndCreateCollection('profiles', {\n            routerId: routerId\n          });\n        case 8:\n          _context3.next = 10;\n          return checkAndCreateCollection('wifiCodes', {\n            routerId: routerId\n          });\n        case 10:\n          _context3.next = 12;\n          return checkAndCreateCollection('clients', {\n            routerId: routerId\n          });\n        case 12:\n          _context3.next = 14;\n          return checkAndCreateCollection('payments', {\n            routerId: routerId\n          });\n        case 14:\n          console.log('Toutes les collections ont été vérifiées et initialisées si nécessaire');\n          return _context3.abrupt(\"return\", true);\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.error('Erreur lors de l\\'initialisation des collections:', _context3.t0);\n          return _context3.abrupt(\"return\", false);\n        case 22:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 18]]);\n  }));\n  return _initializeCollections.apply(this, arguments);\n}\nfunction documentExists(_x3, _x4) {\n  return _documentExists.apply(this, arguments);\n}\n\n/**\n * Gère les erreurs d'index Firebase et retourne un objet avec les informations nécessaires\n * @param {Error} error - L'erreur Firebase à traiter\n * @returns {Object} - Objet contenant les informations sur l'erreur\n */\nfunction _documentExists() {\n  _documentExists = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4(collectionPath, docId) {\n    var docRef, docSnap;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          docRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .doc */ .H9)(_firebase_config_js__WEBPACK_IMPORTED_MODULE_3__.db, collectionPath, docId);\n          _context4.next = 4;\n          return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__/* .getDoc */ .x7)(docRef);\n        case 4:\n          docSnap = _context4.sent;\n          return _context4.abrupt(\"return\", docSnap.exists());\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(\"Erreur lors de la v\\xE9rification de l'existence du document \".concat(docId, \" dans \").concat(collectionPath, \":\"), _context4.t0);\n          return _context4.abrupt(\"return\", false);\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 8]]);\n  }));\n  return _documentExists.apply(this, arguments);\n}\nfunction handleFirebaseIndexError(error) {\n  var _error$message$match;\n  // Vérifier si c'est une erreur d'index Firebase\n  var isIndexError = error.message && error.message.includes('index');\n\n  // Extraire l'URL de création d'index si présente\n  var indexUrl = isIndexError ? ((_error$message$match = error.message.match(/https:\\/\\/console\\.firebase\\.google\\.com[^\\s]+/)) === null || _error$message$match === void 0 ? void 0 : _error$message$match[0]) || null : null;\n  return {\n    isIndexError: isIndexError,\n    indexUrl: indexUrl,\n    message: error.message,\n    originalError: error\n  };\n}\n\n/**\n * Exécute une requête Firebase avec gestion des erreurs d'index\n * @param {Function} queryFunction - Fonction asynchrone qui exécute la requête\n * @param {Function} onSuccess - Fonction de rappel en cas de succès\n * @param {Function} onIndexError - Fonction de rappel en cas d'erreur d'index\n * @param {Function} onOtherError - Fonction de rappel en cas d'autre erreur\n * @returns {Promise<any>} - Résultat de la requête ou de la gestion d'erreur\n */\nfunction executeWithIndexErrorHandling(_x5, _x6, _x7, _x8) {\n  return _executeWithIndexErrorHandling.apply(this, arguments);\n}\n\n/**\n * Gère les erreurs Firebase et extrait les informations utiles\n * @param {Error} error - L'erreur Firebase à traiter\n * @returns {Object} - Informations sur l'erreur\n */\nfunction _executeWithIndexErrorHandling() {\n  _executeWithIndexErrorHandling = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(queryFunction, onSuccess, onIndexError, onOtherError) {\n    var result, errorInfo;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return queryFunction();\n        case 3:\n          result = _context5.sent;\n          return _context5.abrupt(\"return\", onSuccess(result));\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // Traiter l'erreur\n          errorInfo = handleFirebaseIndexError(_context5.t0);\n          if (!errorInfo.isIndexError) {\n            _context5.next = 15;\n            break;\n          }\n          // Erreur d'index Firebase\n          console.warn('Erreur d\\'index Firebase détectée:', errorInfo.message);\n          return _context5.abrupt(\"return\", onIndexError(errorInfo));\n        case 15:\n          // Autre type d'erreur\n          console.error('Erreur lors de l\\'exécution de la requête:', _context5.t0);\n          return _context5.abrupt(\"return\", onOtherError(_context5.t0));\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n  return _executeWithIndexErrorHandling.apply(this, arguments);\n}\nfunction handleFirebaseError(error) {\n  // Initialiser l'objet de résultat\n  var result = {\n    isIndexError: false,\n    indexUrl: null,\n    collection: null,\n    fields: [],\n    message: error.message,\n    originalError: error\n  };\n\n  // Vérifier si c'est une erreur d'index manquant\n  if (error.message && error.message.includes('index')) {\n    result.isIndexError = true;\n\n    // Extraire l'URL de création d'index si elle existe\n    var indexUrlMatch = error.message.match(/https:\\/\\/console\\.firebase\\.google\\.com[^\\s\"']+/);\n    if (indexUrlMatch) {\n      result.indexUrl = indexUrlMatch[0];\n    }\n\n    // Essayer d'extraire la collection concernée\n    var collectionMatch = error.message.match(/collection ([a-zA-Z0-9_-]+)/);\n    if (collectionMatch) {\n      result.collection = collectionMatch[1];\n    }\n\n    // Essayer d'extraire les champs concernés\n    var fieldsMatch = error.message.match(/\\[([^\\]]+)\\]/);\n    if (fieldsMatch) {\n      result.fields = fieldsMatch[1].split(', ').map(function (field) {\n        return field.trim();\n      });\n    }\n    console.warn(\"Erreur d'index Firebase d\\xE9tect\\xE9e pour la collection \".concat(result.collection || 'inconnue'));\n    if (result.indexUrl) {\n      console.info(\"Cr\\xE9ez l'index en visitant: \".concat(result.indexUrl));\n    }\n  }\n  return result;\n}\n\n/**\n * Affiche un message d'erreur d'index dans un conteneur HTML\n * @param {string} containerId - ID du conteneur HTML pour afficher l'erreur\n * @param {Object} errorInfo - Informations sur l'erreur d'index\n */\nfunction displayIndexError(containerId, errorInfo) {\n  var container = document.getElementById(containerId);\n  if (!container) return;\n  container.classList.remove('d-none');\n  container.innerHTML = \"\\n        <div class=\\\"alert alert-warning\\\">\\n            <p><strong>Erreur d'index Firebase :</strong> Cette requ\\xEAte n\\xE9cessite un index compos\\xE9.</p>\\n            \".concat(errorInfo.collection ? \"<p>Collection concern\\xE9e: <code>\".concat(errorInfo.collection, \"</code></p>\") : '', \"\\n            \").concat(errorInfo.fields.length > 0 ? \"<p>Champs: <code>\".concat(errorInfo.fields.join('</code>, <code>'), \"</code></p>\") : '', \"\\n            \").concat(errorInfo.indexUrl ? \"<p>Cliquez sur <a href=\\\"\".concat(errorInfo.indexUrl, \"\\\" target=\\\"_blank\\\">ce lien</a> pour cr\\xE9er l'index n\\xE9cessaire.</p>\") : '', \"\\n            <p class=\\\"mb-0\\\">Apr\\xE8s avoir cr\\xE9\\xE9 l'index, actualisez la page.</p>\\n        </div>\\n    \");\n}\n\n/**\n * Crée des index composites pour les requêtes complexes\n * @param {string} routerId - ID du routeur\n * @returns {Promise<void>}\n */\nfunction createCompositeIndexes(_x9) {\n  return _createCompositeIndexes.apply(this, arguments);\n}\nfunction _createCompositeIndexes() {\n  _createCompositeIndexes = (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .A)(/*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee6(routerId) {\n    var indexesNeeded;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          console.log('Création des index composites...');\n\n          // Cette fonction est principalement informative car les index doivent être créés\n          // via la console Firebase, mais elle peut aider à identifier les index nécessaires\n          indexesNeeded = [{\n            collection: 'payments',\n            fields: ['routerId', 'createdAt'],\n            description: 'Paiements par routeur et date de création'\n          }, {\n            collection: 'wifiCodes',\n            fields: ['routerId', 'profileId', 'status'],\n            description: 'Codes par routeur, profil et statut'\n          }, {\n            collection: 'clients',\n            fields: ['routerId', 'createdAt'],\n            description: 'Clients par routeur et date de création'\n          }, {\n            collection: 'routers',\n            fields: ['userId', 'name'],\n            description: 'Routeurs par utilisateur et nom'\n          }];\n          indexesNeeded.forEach(function (index) {\n            console.log(\"Index requis pour \".concat(index.collection, \": \").concat(index.fields.join(', '), \" - \").concat(index.description));\n          });\n          console.log('Note: Les index composites doivent être créés manuellement dans la console Firebase');\n          console.log('Vous pouvez créer les index nécessaires en suivant les liens dans les messages d\\'erreur');\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _createCompositeIndexes.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///118\n")}}]);